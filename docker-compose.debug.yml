version: '3.4'

services:
  backend:
    image: stack-backend
    build:
      context: backend
      dockerfile: ./Dockerfile
    ports:
      - 8000:8000
    volumes: 
      - type: bind
        source: ./backend
        target: /app
    environment:
      - BACKEND_PORT=${BACKEND_PORT}
      - BACKEND_HOST=${BACKEND_HOST}
      - BACKEND_DATABASE_CONNECTION_STRING=${BACKEND_DATABASE_CONNECTION_STRING}
      - BACKEND_SECRET_KEY=${BACKEND_SECRET_KEY}
      - BACKEND_CRYPO_ALGORITHM=${BACKEND_CRYPO_ALGORITHM}
      - BACKEND_ACCESS_TOKEN_EXPIRE_SECONDS=${BACKEND_ACCESS_TOKEN_EXPIRE_SECONDS}
      - BACKEND_CORS_ALLOW_ORIGINS=${BACKEND_CORS_ALLOW_ORIGINS}
      - BACKEND_CORS_ALLOW_HEADERS=${BACKEND_CORS_ALLOW_HEADERS}
      - BACKEND_CORS_ALLOW_METHODS=${BACKEND_CORS_ALLOW_METHODS}
      - BACKEND_ADMIN_USERNAME=${BACKEND_ADMIN_USERNAME}
      - BACKEND_ADMIN_PASSWORD=${BACKEND_ADMIN_PASSWORD}
      - BACKEND_ADMIN_EMAIL=${BACKEND_ADMIN_EMAIL}
  database:
    image: postgres:12-alpine
    environment: 
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_DB=${DATABASE_NAME}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes: 
      - type: bind
        source: ./database/data
        target: /var/lib/postgresql/data/pgdata
  database_management:
    image: dpage/pgadmin4:4
    ports: 
      - ${PGADMIN_PORT}:${PGADMIN_PORT}
    volumes: 
      - type: bind
        source: ./database_management/data
        target: /var/lib/pgadmin/storage
    environment: 
      - PGADMIN_LISTEN_PORT=${PGADMIN_PORT}
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}